{"version":3,"sources":["webpack:///../docs/components/view.mdx"],"names":["_frontmatter","name","Playground","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Fragment","View","Row","Col","Text","Button","p","body","textAlign","bottom","active","fluid","flexWrap","Array","fill","map","_","i","key","width","elevation","bg","pt","pb","size","fontWeight","isMDXComponent"],"mappings":"wmBAYO,IAAMA,EAAe,Q,0MAE5B,IAAsBC,EAKhBC,GALgBD,EAKW,aALH,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,kBAASE,KAIZG,EAAc,CAClBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,qDAAiH,0BAAYA,WAAW,KAAvB,OAAjH,KACA,iBAAQ,CACN,GAAM,eADR,eAGA,YAACV,EAAD,CAAYW,WAAY,EAAGC,OAAQ,qrBAAwrBC,QAAS,CACluBZ,QACAK,kBACAQ,oBACAC,SACAC,QACAC,QACAC,SACAC,YACCV,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,YAAC,IAAD,CAAMW,EAAG,EAAGC,MAAI,EAACZ,QAAQ,QACvB,YAAC,IAAD,CAAMa,UAAU,UAAUb,QAAQ,QAAlC,kcAEF,YAAC,IAAD,CAAMW,EAAG,EAAGG,QAAM,EAACd,QAAQ,QACzB,YAAC,IAAD,CAAQe,QAAM,EAACC,OAAK,EAAChB,QAAQ,UAA7B,0BAIF,iBAAQ,CACN,GAAM,aADR,aAGA,YAACT,EAAD,CAAYW,WAAY,EAAGC,OAAQ,2UAAsVC,QAAS,CAChYZ,QACAK,kBACAQ,oBACAC,SACAC,QACAC,QACAC,SACAC,YACCV,QAAQ,cACb,YAAC,IAAD,CAAKiB,SAAS,OAAOjB,QAAQ,OAC1BkB,MAAM,IAAIC,KAAK,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OAAU,YAAC,IAAD,CAAKC,IAAKD,EAAGX,EAAG,EAAGa,MAAO,EAAI,EAAGxB,QAAQ,OACzE,YAAC,IAAD,CAAMyB,UAAWH,EAAGI,GAAG,YAAYC,GAAI,GAAIC,GAAI,GAAI5B,QAAQ,QACzD,YAAC,IAAD,CAAM6B,KAAK,QAAQhB,UAAU,SAASiB,WAAW,OAAO9B,QAAQ,QAC7DsB,W,iMAUbxB,EAAWiC,gBAAiB","file":"component---docs-components-view-mdx-2bdddb3a1bfbaf785d7d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/emcasa/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport View from '@emcasa/ui-dom/components/View';\nimport Row from '@emcasa/ui-dom/components/Row';\nimport Col from '@emcasa/ui-dom/components/Col';\nimport Text from '@emcasa/ui-dom/components/Text';\nimport Button from '@emcasa/ui-dom/components/Button';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"view\"\n    }}>{`View`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`View`}</inlineCode>{` component is a wrapper for an empty and unstyled `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<View>\\n  <View p={4} body>\\n    <Text textAlign=\\\"justify\\\">\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\\n      occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\n      mollit anim id est laborum.\\n    </Text>\\n  </View>\\n  <View p={4} bottom>\\n    <Button active fluid>\\n      Fixed at the bottom\\n    </Button>\\n  </View>\\n</View>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      View,\n      Row,\n      Col,\n      Text,\n      Button\n    }} mdxType=\"Playground\">\n  <View mdxType=\"View\">\n    <View p={4} body mdxType=\"View\">\n      <Text textAlign=\"justify\" mdxType=\"Text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n    </View>\n    <View p={4} bottom mdxType=\"View\">\n      <Button active fluid mdxType=\"Button\">Fixed at the bottom</Button>\n    </View>\n  </View>\n    </Playground>\n    <h2 {...{\n      \"id\": \"elevation\"\n    }}>{`Elevation`}</h2>\n    <Playground __position={1} __code={'<Row flexWrap=\\\"wrap\\\">\\n  {Array(24)\\n    .fill(null)\\n    .map((_, i) => (\\n      <Col key={i} p={5} width={1 / 3}>\\n        <View elevation={i} bg=\\\"lightGrey\\\" pt={10} pb={10}>\\n          <Text size=\\\"large\\\" textAlign=\\\"center\\\" fontWeight=\\\"bold\\\">\\n            {i}\\n          </Text>\\n        </View>\\n      </Col>\\n    ))}\\n</Row>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      View,\n      Row,\n      Col,\n      Text,\n      Button\n    }} mdxType=\"Playground\">\n  <Row flexWrap=\"wrap\" mdxType=\"Row\">\n    {Array(24).fill(null).map((_, i) => <Col key={i} p={5} width={1 / 3} mdxType=\"Col\">\n        <View elevation={i} bg=\"lightGrey\" pt={10} pb={10} mdxType=\"View\">\n          <Text size=\"large\" textAlign=\"center\" fontWeight=\"bold\" mdxType=\"Text\">\n            {i}\n          </Text>\n        </View>\n      </Col>)}\n  </Row>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}