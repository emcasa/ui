{"version":3,"sources":["webpack:///../docs/components/group.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","Group","initialValue","onChange","value","console","log","label","disabled","selectedValue","parentName","values","renderItem","option","width","m","fluid","fontSize","strategy","isSelected","update","undefined","isMDXComponent"],"mappings":"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","file":"component---docs-components-group-mdx-db7f9fd3faf59700c642.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/emcasa/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport View from '@emcasa/ui-dom/components/View';\nimport Text from '@emcasa/ui-dom/components/Text';\nimport Button from '@emcasa/ui-dom/components/Button';\nimport RadioButton from '@emcasa/ui-dom/components/RadioButton';\nimport Col from '@emcasa/ui-dom/components/Col';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"group\"\n    }}>{`Group`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Fragment mdxType=\"Fragment\">\n  <Text mdxType=\"Text\">Uncontrolled radio group</Text>\n  <RadioButton.Group initialValue=\"a\" onChange={value => console.log('selected', value)}>\n    <RadioButton label=\"Option 1\" value=\"a\" mdxType=\"RadioButton\" />\n    <RadioButton label=\"Option 2\" value=\"b\" mdxType=\"RadioButton\" />\n    <RadioButton label=\"Option 3\" value=\"c\" disabled mdxType=\"RadioButton\" />\n  </RadioButton.Group>\n  <Text mdxType=\"Text\">Controlled radio group</Text>\n  <RadioButton.Group selectedValue=\"a\" onChange={value => console.log('selected', value)}>\n    <RadioButton label=\"Option 1\" value=\"a\" mdxType=\"RadioButton\" />\n    <RadioButton label=\"Option 2\" value=\"b\" mdxType=\"RadioButton\" />\n    <RadioButton label=\"Option 3\" value=\"c\" disabled mdxType=\"RadioButton\" />\n  </RadioButton.Group>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"renderitem\"\n    }}>{`renderItem`}</h2>\n    <p>{`All children on a Group must be an instance of it's base component, or at least work with the same props.\nuse `}<inlineCode parentName=\"p\">{`renderItem`}</inlineCode>{` to render components around each child.`}</p>\n    <Fragment mdxType=\"Fragment\">\n  <Text mdxType=\"Text\">With option wrapper</Text>\n  <Button.Group initialValue=\"b\" onChange={values => console.log('selected', values)} renderItem={(option, props) => <Col width={1 / 4} m={4} mdxType=\"Col\">{option}</Col>}>\n    <Button fluid value=\"a\" mdxType=\"Button\">Button A</Button>\n    <Button fluid value=\"b\" mdxType=\"Button\">Button B</Button>\n    <Button fluid value=\"c\" mdxType=\"Button\">Button C</Button>\n  </Button.Group>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"select-strategies\"\n    }}>{`Select Strategies`}</h2>\n    <Fragment mdxType=\"Fragment\">\n  <Text mdxType=\"Text\">Pre-defined strategies:</Text>\n  <Text fontSize=\"small\" mdxType=\"Text\">simple</Text>\n  <Button.Group strategy=\"simple\" initialValue=\"b\" onChange={value => console.log('selected', value)}>\n    <Button value=\"a\" mdxType=\"Button\">Button A</Button>\n    <Button value=\"b\" mdxType=\"Button\">Button B</Button>\n    <Button value=\"c\" mdxType=\"Button\">Button C</Button>\n  </Button.Group>\n  <Text fontSize=\"small\" mdxType=\"Text\">multi:</Text>\n  <Button.Group strategy=\"multi\" initialValue={[\"a\", \"b\"]} onChange={value => console.log('selected', value)}>\n    <Button value=\"a\" mdxType=\"Button\">Button A</Button>\n    <Button value=\"b\" mdxType=\"Button\">Button B</Button>\n    <Button value=\"c\" mdxType=\"Button\">Button C</Button>\n  </Button.Group>\n  <Text mdxType=\"Text\">Custom strategy</Text>\n  <Button.Group initialValue=\"b\" onChange={values => console.log('selected', values)} strategy={{\n        isSelected: (selectedValue, value) => selectedValue === value,\n        update: (selectedValue, value) => selectedValue === value ? undefined : value\n      }}>\n    <Button value=\"a\" mdxType=\"Button\">Button A</Button>\n    <Button value=\"b\" mdxType=\"Button\">Button B</Button>\n    <Button value=\"c\" mdxType=\"Button\">Button C</Button>\n  </Button.Group>\n    </Fragment>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}