{"version":3,"sources":["webpack:///../docs/components/map.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Map","parentName","m","height","apiKey","GOOGLE_MAPS_API_KEY","libraries","markers","mt","width","name","color","size","Marker","cluster","isHighlight","id","onChange","bounds","listings","console","log","map","key","onSelect","String","text","MultiMarkerBase","PaginatedMultiMarker","ClusterMarker","PawMarker","MultiMarker","borderRadius","onChangePage","point","index","url","bg","p","src","style","objectFit","type","active","places","onMapLoaded","onTogglePlaces","ButtonControl","position","onClick","geometry","lat","location","lng","SelectControl","label","fontSize","zIndex","Option","value","Checkbox","isMDXComponent"],"mappings":"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","file":"component---docs-components-map-mdx-1fcc14ee0c4bcf9af991.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/emcasa/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from 'docz';\nimport { Fragment } from 'react';\nimport View from '@emcasa/ui-dom/src/View';\nimport Map from '@emcasa/ui-dom/src/Map';\nimport Marker from '@emcasa/ui-dom/src/Map/Marker';\nimport { MultiMarkerBase } from '@emcasa/ui-dom/src/Map/MultiMarker';\nimport PaginatedMultiMarker from '@emcasa/ui-dom/src/Map/PaginatedMultiMarker';\nimport ButtonControl from '@emcasa/ui-dom/src/Map/ButtonControl';\nimport SelectControl from '@emcasa/ui-dom/src/Map/SelectControl';\nimport Icon from '@emcasa/ui-dom/src/Icon';\nimport PlaceSearch from './PlaceSearch';\nimport PawMarker from './PawMarker';\nimport markers from './markers.json';\nimport { GOOGLE_MAPS_API_KEY } from '../config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"map\"\n    }}>{`Map`}</h1>\n    <h2 {...{\n      \"id\": \"map-1\"\n    }}>{`Map`}</h2>\n    <Props of={Map} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`All markers must be direct children of `}<inlineCode parentName=\"p\">{`<Map />`}</inlineCode>{` and should have `}<inlineCode parentName=\"p\">{`lat`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`lng`}</inlineCode>{` props.`}</p>\n    <Fragment mdxType=\"Fragment\">\n  <View m={4} height={400} mdxType=\"View\">\n    <Map apiKey={GOOGLE_MAPS_API_KEY} libraries={['places']} mdxType=\"Map\">\n      <View {...markers[0]} mt={-25} width={25} height={25} mdxType=\"View\">\n        <Icon name=\"map-marker-alt\" color=\"pink\" size={25} mdxType=\"Icon\" />\n      </View>\n    </Map>\n  </View>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"mapmarker\"\n    }}>{`Map.Marker`}</h2>\n    <Props of={Marker} mdxType=\"Props\" />\n    <p><inlineCode parentName=\"p\">{`Map.Marker`}</inlineCode>{`s get clustered according to the parent `}<inlineCode parentName=\"p\">{`Map`}</inlineCode>{`'s supercluster options.`}</p>\n    <p>{`When clustering is enabled and the zoom level is greater than `}<inlineCode parentName=\"p\">{`cluster.maxZoom`}</inlineCode>{` (defaults to `}<inlineCode parentName=\"p\">{`17`}</inlineCode>{`), markers on the same spot are clustered into multi markers.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`multiMarkerRadius`}</inlineCode>{` to adjust the cluster radius in pixels. `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` only groups markers in the same coordinates.`}</p>\n    <h3 {...{\n      \"id\": \"basic-usage-1\"\n    }}>{`Basic usage`}</h3>\n    <Fragment mdxType=\"Fragment\">\n  <View m={4} height={400} mdxType=\"View\">\n    <Map cluster apiKey={GOOGLE_MAPS_API_KEY} isHighlight={({\n          id\n        }) => id == markers[0].id} onChange={(bounds, listings) => console.log('onChange', {\n          bounds,\n          listings\n        })} mdxType=\"Map\">\n      {markers.map(props => <Map.Marker {...props} key={props.id} onSelect={() => console.log('onSelect', props.id)}>\n          {String(props.text)}\n        </Map.Marker>)}\n    </Map>\n  </View>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"mapmultimarker\"\n    }}>{`Map.MultiMarker`}</h2>\n    <Props of={MultiMarkerBase} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"mappaginatedmultimarker\"\n    }}>{`Map.PaginatedMultiMarker`}</h2>\n    <Props of={PaginatedMultiMarker} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"configuring-cluster-components\"\n    }}>{`Configuring cluster components`}</h3>\n    <Fragment mdxType=\"Fragment\">\n  <View m={4} height={400} mdxType=\"View\">\n    <Map cluster apiKey={GOOGLE_MAPS_API_KEY} ClusterMarker={PawMarker} MultiMarker={props => <Map.PaginatedMultiMarker {...props} borderRadius={10} onChangePage={(point, index) => console.log('onChangePage', point, index)} />} mdxType=\"Map\">\n      {['https://bit.ly/2VQOSeF', 'https://bit.ly/30IXSBs', 'https://bit.ly/2JwCtWu'].map(url => <Map.Marker {...markers[0]} id={url} key={url} width={200} height={200} bg=\"white\" p={0}>\n          <img src={url} style={{\n              objectFit: 'cover',\n              width: '100%',\n              height: '100%'\n            }} />\n        </Map.Marker>)}\n    </Map>\n  </View>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"mapbuttoncontrol\"\n    }}>{`Map.ButtonControl`}</h2>\n    <Fragment mdxType=\"Fragment\">\n  <View m={4} height={400} mdxType=\"View\">\n    <PlaceSearch type=\"park\" mdxType=\"PlaceSearch\">\n      {({\n            active,\n            places,\n            onMapLoaded,\n            onChange,\n            onTogglePlaces\n          }) => <Map apiKey={GOOGLE_MAPS_API_KEY} libraries={['places']} onMapLoaded={onMapLoaded} onChange={onChange} mdxType=\"Map\">\n          <Map.ButtonControl active={active} position=\"top-center\" onClick={onTogglePlaces}>\n            Show nearby parks\n          </Map.ButtonControl>\n          <View {...markers[0]} mt={-25} width={25} height={25} mdxType=\"View\">\n            <Icon name=\"map-marker-alt\" color=\"pink\" size={25} mdxType=\"Icon\" />\n          </View>\n          {active && places.map(({\n              id,\n              name,\n              geometry\n            }) => <View id={id} key={id} lat={geometry.location.lat()} lng={geometry.location.lng()} mt={-12.5} width={25} height={25} mdxType=\"View\">\n              <Icon name=\"tree\" color=\"green\" size={25} mdxType=\"Icon\" />\n            </View>)}\n        </Map>}\n    </PlaceSearch>\n  </View>\n    </Fragment>\n    <h2 {...{\n      \"id\": \"mapselectcontrol\"\n    }}>{`Map.SelectControl`}</h2>\n    <Fragment mdxType=\"Fragment\">\n  <View m={4} height={400} mdxType=\"View\">\n    <Map apiKey={GOOGLE_MAPS_API_KEY} mdxType=\"Map\">\n      <Map.SelectControl label=\"Select control\" height=\"short\" fontSize=\"small\" position=\"top-right\" zIndex={100} onChange={console.log}>\n        <Map.SelectControl.Option color=\"extraDarkSmoke\" value={null}>\n          Select an option\n        </Map.SelectControl.Option>\n        {['A', 'B', 'C'].map(name => <Map.SelectControl.Checkbox key={name} value={name}>\n            Option {name}\n          </Map.SelectControl.Checkbox>)}\n      </Map.SelectControl>\n      <View {...markers[0]} mt={-25} width={25} height={25} mdxType=\"View\">\n        <Icon name=\"map-marker-alt\" color=\"pink\" size={25} mdxType=\"Icon\" />\n      </View>\n    </Map>\n  </View>\n    </Fragment>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}