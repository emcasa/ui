{"version":3,"sources":["webpack:///../docs/components/text.mdx"],"names":["_frontmatter","name","Playground","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Fragment","Text","View","Button","inline","fontWeight","color","fontSize","isMDXComponent"],"mappings":"ojBAUO,IAAMA,EAAe,Q,0MAE5B,IAAsBC,EAKhBC,GALgBD,EAKW,aALH,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,kBAASE,KAIZG,EAAc,CAClBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,iCAAgB,0BAAYC,WAAW,KAAvB,QAAhB,yJACA,qBAAG,0BAAYA,WAAW,KAAvB,QAAH,kDACA,iBAAQ,CACN,GAAM,eADR,eAGA,YAACV,EAAD,CAAYW,WAAY,EAAGC,OAAQ,4TAAmUC,QAAS,CAC7WZ,QACAK,kBACAQ,oBACAC,SACAC,SACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QAAd,wBACA,YAAC,IAAD,CAAMS,QAAM,EAACT,QAAQ,QAArB,+DACA,YAAC,IAAD,CAAMU,WAAW,OAAOC,MAAM,OAAOX,QAAQ,QAA7C,eACA,YAAC,IAAD,CAAMA,QAAQ,QAAd,aAA+B,YAAC,IAAD,CAAQA,QAAQ,UAAhB,UAA/B,sBACA,YAAC,IAAD,CAAMY,SAAS,SAASZ,QAAQ,QAAhC,8B,iMAMFF,EAAWe,gBAAiB","file":"component---docs-components-text-mdx-48ebca983d45edaa8b3b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/emcasa/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Fragment } from 'react';\nimport Text from '@emcasa/ui-dom/components/Text';\nimport View from '@emcasa/ui-dom/components/View';\nimport Button from '@emcasa/ui-dom/components/Button';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p>{`A simple `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{`. All text should be wrapped in this component for better compatibility with platforms that don't support text outside of tags, such as React Native.`}</p>\n    <p><inlineCode parentName=\"p\">{`Text`}</inlineCode>{` accepts any component or strings as children.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<Text>This is a paragraph.</Text>\\n<Text inline>\\n  This is an inline text. A span element is rendered instead.\\n</Text>\\n<Text fontWeight=\\\"bold\\\" color=\\\"pink\\\">\\n  Styled text\\n</Text>\\n<Text>\\n  There\\'s a <Button>button</Button> inside this text!\\n</Text>\\n<Text fontSize=\\\"xlarge\\\">This text is very large.</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Fragment,\n      Text,\n      View,\n      Button\n    }} mdxType=\"Playground\">\n  <Text mdxType=\"Text\">This is a paragraph.</Text>\n  <Text inline mdxType=\"Text\">This is an inline text. A span element is rendered instead.</Text>\n  <Text fontWeight=\"bold\" color=\"pink\" mdxType=\"Text\">Styled text</Text>\n  <Text mdxType=\"Text\">There's a <Button mdxType=\"Button\">button</Button> inside this text!</Text>\n  <Text fontSize=\"xlarge\" mdxType=\"Text\">This text is very large.</Text>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}