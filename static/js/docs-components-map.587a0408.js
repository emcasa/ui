(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./docs/components/map.mdx":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),i=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),l=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),s=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),u=n("./node_modules/react/index.js"),c=n.n(u),p=n("./node_modules/@mdx-js/tag/dist/index.js"),d=n("./node_modules/docz/dist/index.esm.js"),f=n("./packages/ui-dom/components/View/index.js"),g=n.n(f),m=n("./packages/ui-dom/components/Map/index.js"),b=n.n(m),y=n("./packages/ui-dom/components/Icon/index.js"),h=n.n(y),O=n("./docs/components/markers.json");n.d(t,"default",function(){return x});var x=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(i.a)(this,Object(l.a)(t).call(this,e))).layout=null,n}return Object(s.a)(t,e),Object(a.a)(t,[{key:"render",value:function(){var e=this.props,t=e.components,n=Object(r.a)(e,["components"]);return c.a.createElement(p.MDXTag,{name:"wrapper",components:t},c.a.createElement(p.MDXTag,{name:"h1",components:t,props:{id:"map"}},"Map"),c.a.createElement(p.MDXTag,{name:"p",components:t},"Map component."),c.a.createElement(p.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),c.a.createElement(d.c,{__position:0,__code:'<View m={4} height={400}>\n  <Map apiKey={GOOGLE_MAPS_API_KEY}>\n    <View {...markers[0]} mt={-25} width={25} height={25}>\n      <Icon name="map-marker-alt" color="pink" size={25} />\n    </View>\n  </Map>\n</View>',__scope:{props:this?this.props:n,Playground:d.c,View:g.a,Map:b.a,Icon:h.a,markers:O,GOOGLE_MAPS_API_KEY:""},__codesandbox:""},c.a.createElement(g.a,{m:4,height:400},c.a.createElement(b.a,{apiKey:""},c.a.createElement(g.a,Object.assign({},O[0],{mt:-25,width:25,height:25}),c.a.createElement(h.a,{name:"map-marker-alt",color:"pink",size:25}))))),c.a.createElement(p.MDXTag,{name:"h2",components:t,props:{id:"clustermarker"}},"ClusterMarker"),c.a.createElement(d.c,{__position:1,__code:"<View m={4} height={400}>\n  <Map\n    cluster\n    apiKey={GOOGLE_MAPS_API_KEY}\n    isHighlight={({ id }) => id == markers[0].id}\n    onChange={(bounds, listings) =>\n      console.log('onChange', { bounds, listings })\n    }\n  >\n    {markers.map(props => (\n      <Map.Marker\n        {...props}\n        key={props.id}\n        onSelect={() => console.log('onSelect', props.id)}\n      >\n        {String(props.text)}\n      </Map.Marker>\n    ))}\n  </Map>\n</View>",__scope:{props:this?this.props:n,Playground:d.c,View:g.a,Map:b.a,Icon:h.a,markers:O,GOOGLE_MAPS_API_KEY:""},__codesandbox:""},c.a.createElement(g.a,{m:4,height:400},c.a.createElement(b.a,{cluster:!0,apiKey:"",isHighlight:function(e){return e.id==O[0].id},onChange:function(e,t){return console.log("onChange",{bounds:e,listings:t})}},O.map(function(e){return c.a.createElement(b.a.Marker,Object.assign({},e,{key:e.id,onSelect:function(){return console.log("onSelect",e.id)}}),String(e.text))})))),c.a.createElement(p.MDXTag,{name:"h2",components:t,props:{id:"multimarker"}},"MultiMarker"),c.a.createElement(p.MDXTag,{name:"p",components:t},"When clustering is enabled and the zoom level is greater than ",c.a.createElement(p.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"cluster.maxZoom")," (defaults to ",c.a.createElement(p.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"17"),"), markers on the same spot are clustered into multi markers."),c.a.createElement(p.MDXTag,{name:"p",components:t},"Use ",c.a.createElement(p.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"multiMarkerRadius")," to adjust the cluster radius in pixels. ",c.a.createElement(p.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"0")," only groups markers in the same coordinates."),c.a.createElement(d.c,{__position:2,__code:"<View m={4} height={400}>\n  <Map cluster apiKey={GOOGLE_MAPS_API_KEY}>\n    {['A', 'B', 'C'].map(name => (\n      <Map.Marker {...markers[0]} id={name} key={name}>\n        {'Marker ' + name}\n      </Map.Marker>\n    ))}\n  </Map>\n</View>",__scope:{props:this?this.props:n,Playground:d.c,View:g.a,Map:b.a,Icon:h.a,markers:O,GOOGLE_MAPS_API_KEY:""},__codesandbox:""},c.a.createElement(g.a,{m:4,height:400},c.a.createElement(b.a,{cluster:!0,apiKey:""},["A","B","C"].map(function(e){return c.a.createElement(b.a.Marker,Object.assign({},O[0],{id:e,key:e}),"Marker "+e)})))))}}]),t}(c.a.Component);x.isMDXComponent=!0},"./docs/components/markers.json":function(e){e.exports=[{lat:-22.9608099,lng:-43.2096142,id:"101.a",text:6e5},{lat:-22.9608099,lng:-43.2096142,id:"101.b",text:6e5},{lat:-22.9608099,lng:-43.2096142,id:"101.c",text:6e5},{lat:-22.9833576,lng:-43.1998199,id:"312",text:117e4},{lat:-22.9711476,lng:-43.1845933,id:"128",text:119e4},{lat:-22.9390338,lng:-43.1745585,id:"259",text:18e5},{lat:-22.9528316,lng:-43.1769845,id:"65",text:86e4},{lat:-22.9819421,lng:-43.2389042,id:"72",text:14e5},{lat:-22.9430224,lng:-43.19151440000002,id:"89",text:88e4},{lat:-22.9815548,lng:-43.19424230000001,id:"117",text:85e4},{lat:-22.9527353,lng:-43.1677344,id:"190",text:17e5},{lat:-22.9755316,lng:-43.1925039,id:"346",text:7100100},{lat:-22.9565911,lng:-43.1786764,id:"86",text:87e4},{lat:-22.9783778,lng:-43.1894693,id:"227",text:12e5},{lat:-22.983671,lng:-43.195971,id:"201",text:75e4},{lat:-22.9622834,lng:-43.17716410000003,id:"68",text:156e4},{lat:-22.977617,lng:-43.225388,id:"322",text:195e4},{lat:-22.9796507,lng:-43.2204178,id:"267",text:11e5},{lat:-22.9868888,lng:-43.22706640000001,id:"24",text:41e5},{lat:-22.9398251,lng:-43.1780107,id:"76",text:103e4},{lat:-22.9315194,lng:-43.1819802,id:"17",text:475e4},{lat:-22.9401365,lng:-43.17981529999997,id:"10",text:113e4},{lat:-22.964473,lng:-43.193532300000015,id:"73",text:95e4},{lat:-22.9521841,lng:-43.190136300000006,id:"22",text:18e5},{lat:-22.9676447,lng:-43.183341799999994,id:"20",text:32e5},{lat:-22.9298234,lng:-43.18366600000002,id:"18",text:63e5},{lat:-22.9671543,lng:-43.20317490000002,id:"21",text:28e5},{lat:-22.964855,lng:-43.202516,id:"33",text:21e5},{lat:-22.95810179999999,lng:-43.17809299999999,id:"70",text:1035e3},{lat:-22.9775522,lng:-43.228355599999986,id:"7",text:201e4},{lat:-22.983607,lng:-43.227337000000034,id:"9",text:21e5},{lat:-22.9949306,lng:-43.275009599999976,id:"11",text:35e5},{lat:-22.984197,lng:-43.232776,id:"75",text:8e5},{lat:-22.9852005,lng:-43.2040217,id:"14",text:115e4},{lat:-22.9780911,lng:-43.2258137,id:"45",text:17e5},{lat:-22.940907,lng:-43.19132289999999,id:"16",text:85e4},{lat:-22.9489083,lng:-43.18400610000003,id:"25",text:165e4},{lat:-22.9606056,lng:-43.2013486,id:"39",text:38e5},{lat:-22.9777622,lng:-43.2279125,id:"23",text:21e5},{lat:-22.953479,lng:-43.18142260000002,id:"26",text:175e4},{lat:-22.9606056,lng:-43.2013486,id:"34",text:106e4},{lat:-22.9606056,lng:-43.2013486,id:"41",text:117e4},{lat:-22.941858,lng:-43.192853,id:"31",text:145e4},{lat:-22.9834622,lng:-43.192355899999995,id:"19",text:78e4},{lat:-22.9363508,lng:-43.1762839,id:"3",text:85e4},{lat:-22.9830535,lng:-43.21074709999999,id:"8",text:225e4},{lat:-22.9869688,lng:-43.22890540000003,id:"29",text:392e4},{lat:-22.983834,lng:-43.193774,id:"6",text:145e4},{lat:-22.9529669,lng:-43.19172259999999,id:"44",text:265e4},{lat:-22.9335162,lng:-43.1831869,id:"13",text:2e6},{lat:-22.9847552,lng:-43.231512699999996,id:"43",text:26e5},{lat:-22.9393772,lng:-43.19178420000003,id:"28",text:14e5},{lat:-22.937725,lng:-43.17785930000002,id:"27",text:94e4},{lat:-22.965372,lng:-43.18042890000004,id:"58",text:28e5},{lat:-22.9594502,lng:-43.2019129,id:"79",text:11e5},{lat:-22.9353967,lng:-43.1800132,id:"63",text:199e4},{lat:-22.927198,lng:-43.1754482,id:"61",text:99e4},{lat:-22.9695264,lng:-43.189977,id:"48",text:95e4},{lat:-22.937892,lng:-43.176018899999974,id:"50",text:295e4},{lat:-22.9677755,lng:-43.2037935,id:"64",text:1075e3},{lat:-22.972449,lng:-43.1906283,id:"62",text:73e4},{lat:-22.9598355,lng:-43.20344720000001,id:"55",text:236e4},{lat:-22.9753444,lng:-43.192375700000014,id:"36",text:79e4},{lat:-22.987151,lng:-43.231600000000014,id:"49",text:265e4},{lat:-22.9775617,lng:-43.19728040000001,id:"38",text:15e5},{lat:-22.9763192,lng:-43.19340310000001,id:"59",text:115e4},{lat:-22.9769635,lng:-43.19588090000002,id:"66",text:103e4},{lat:-22.937064,lng:-43.18301,id:"54",text:99e4},{lat:-22.9661014,lng:-43.21675540000001,id:"51",text:4e6},{lat:-22.9646223,lng:-43.22099109999999,id:"78",text:113e4},{lat:-22.983573,lng:-43.190094999999985,id:"60",text:147e4},{lat:-22.9560791,lng:-43.190205900000024,id:"84",text:12e5},{lat:-22.9569151,lng:-43.19849629999999,id:"56",text:82e4},{lat:-22.9259373,lng:-43.1772277,id:"85",text:85e4},{lat:-22.983757,lng:-43.1986682,id:"94",text:15e5},{lat:-22.9369602,lng:-43.1775996,id:"90",text:95e4},{lat:-22.966082,lng:-43.18899769999996,id:"69",text:1185e3},{lat:-22.9362411,lng:-43.1850009,id:"92",text:12e5},{lat:-22.961293,lng:-43.218241,id:"88",text:895e3},{lat:-22.9837898,lng:-43.19356979999998,id:"80",text:1e6},{lat:-22.9717697,lng:-43.18636129999999,id:"83",text:105e4},{lat:-22.9746287,lng:-43.19011330000001,id:"81",text:72e4},{lat:-22.9841382,lng:-43.190887299999986,id:"87",text:15e5},{lat:-22.9858367,lng:-43.21370159999999,id:"95",text:2e7},{lat:-22.9910577,lng:-43.3009366,id:"52",text:58e5},{lat:-22.9813083,lng:-43.19266479999999,id:"82",text:12e5},{lat:-22.9847341,lng:-43.1936536,id:"104",text:165e4},{lat:-22.981379,lng:-43.205669,id:"103",text:19e5},{lat:-22.9822996,lng:-43.2038386,id:"112",text:1545e3},{lat:-22.9625068,lng:-43.17389179999999,id:"102",text:14e5},{lat:-22.9600117,lng:-43.2031126,id:"109",text:98e4},{lat:-23.9720949,lng:-46.3159834,id:"100",text:123e4},{lat:-22.9600117,lng:-43.2031126,id:"107",text:92e4},{lat:-22.983799,lng:-43.197536,id:"129",text:1442e3},{lat:-22.9872476,lng:-43.1901074,id:"130",text:265e4},{lat:-22.9817997,lng:-43.2086305,id:"127",text:23e5},{lat:-22.9398054,lng:-43.1801507,id:"125",text:84e4},{lat:-22.985048,lng:-43.19176280000001,id:"131",text:38e5},{lat:-22.9782241,lng:-43.1924238,id:"126",text:134e4},{lat:-22.9828488,lng:-43.21254279999999,id:"114",text:42e5},{lat:-22.96082179999999,lng:-43.2074777,id:"133",text:115e4},{lat:-22.9828153,lng:-43.20972099999999,id:"135",text:28e5},{lat:-22.97413179999999,lng:-43.2304566,id:"124",text:145e4},{lat:-22.977427,lng:-43.2274914,id:"122",text:22e5},{lat:-22.940947,lng:-43.17579899999999,id:"142",text:245e4},{lat:-22.9521983,lng:-43.1875839,id:"140",text:92e4},{lat:-22.9718878,lng:-43.2077073,id:"187",text:155e4},{lat:-22.9288503,lng:-43.17428,id:"139",text:16e5},{lat:-22.9769263,lng:-43.2290044,id:"136",text:23e5},{lat:-22.9835792,lng:-43.19053769999999,id:"144",text:29e5},{lat:-22.95706479999999,lng:-43.1915771,id:"178",text:85e4},{lat:-22.9776292,lng:-43.2285486,id:"137",text:23e5},{lat:-22.941858,lng:-43.192853,id:"181",text:15e5},{lat:-22.9384632,lng:-43.1955651,id:"185",text:1085e3},{lat:-22.965168,lng:-43.2010153,id:"180",text:38e5},{lat:-22.9821776,lng:-43.1999828,id:"179",text:13e5},{lat:-22.9531527,lng:-43.1866453,id:"184",text:18e5},{lat:-22.984756,lng:-43.21304300000001,id:"188",text:32e5},{lat:-22.9962633,lng:-43.2720962,id:"198",text:49e5},{lat:-22.965332,lng:-43.189002,id:"197",text:78e4},{lat:-22.9728969,lng:-43.2272833,id:"134",text:179e4},{lat:-22.987264,lng:-43.229971,id:"192",text:215e4},{lat:-22.967297,lng:-43.184519,id:"196",text:168e4},{lat:-22.93960359999999,lng:-43.1769661,id:"194",text:95e4},{lat:-22.979827,lng:-43.21901400000001,id:"191",text:206e4},{lat:-22.936552,lng:-43.1907049,id:"210",text:36e5},{lat:-22.974009,lng:-43.22941099999999,id:"204",text:42e5},{lat:-22.9846119,lng:-43.2318939,id:"222",text:375e4},{lat:-22.9709026,lng:-43.1856618,id:"214",text:103e4},{lat:-22.9503237,lng:-43.1773817,id:"208",text:22e5},{lat:-22.983944,lng:-43.1928399,id:"202",text:1261e3},{lat:-22.9323341,lng:-43.17647569999999,id:"215",text:95e4},{lat:-22.9392996,lng:-43.1777373,id:"206",text:94e4},{lat:-22.9730155,lng:-43.2047867,id:"251",text:158e4},{lat:-22.9642184,lng:-43.18172510000001,id:"207",text:134e4},{lat:-22.9667925,lng:-43.1856543,id:"71",text:18e5},{lat:-22.9741007,lng:-43.1931298,id:"211",text:103e4},{lat:-22.96607699999999,lng:-43.187534,id:"209",text:99e4},{lat:-22.966354,lng:-43.202437,id:"199",text:44e5},{lat:-22.9853376,lng:-43.19182259999999,id:"221",text:299e4},{lat:-22.9807355,lng:-43.21916179999999,id:"223",text:21e5},{lat:-22.9806269,lng:-43.2027641,id:"218",text:24e5},{lat:-22.9877057,lng:-43.22998750000001,id:"226",text:95e5},{lat:-22.93542,lng:-43.175303,id:"216",text:2e6},{lat:-22.935302,lng:-43.18676699999999,id:"217",text:85e4},{lat:-22.957992,lng:-43.194113,id:"230",text:92e4},{lat:-22.9623311,lng:-43.1699247,id:"229",text:9e5},{lat:-22.9436495,lng:-43.1915764,id:"220",text:125e4},{lat:-22.9803599,lng:-43.20297000000001,id:"291",text:89e4},{lat:-22.962191,lng:-43.168627,id:"113",text:165e4},{lat:-22.9841402,lng:-43.22846229999999,id:"237",text:39e5},{lat:-22.9606056,lng:-43.2013486,id:"240",text:125e4},{lat:-22.9818269,lng:-43.19039859999999,id:"247",text:4e6},{lat:-22.9384778,lng:-43.17529739999999,id:"238",text:15e5},{lat:-22.9782191,lng:-43.19053549999999,id:"245",text:129e4},{lat:-22.9783408,lng:-43.1899313,id:"242",text:122e4},{lat:-22.981283,lng:-43.22583300000001,id:"249",text:2e6},{lat:-22.964187,lng:-43.1926865,id:"292",text:135e4},{lat:-22.9854479,lng:-43.2038987,id:"264",text:15e5},{lat:-22.9436342,lng:-43.1602982,id:"213",text:14e5},{lat:-22.936318,lng:-43.1756702,id:"262",text:98e4},{lat:-22.9747273,lng:-43.18827739999999,id:"260",text:22e5},{lat:-22.984756,lng:-43.21304300000001,id:"265",text:28e5},{lat:-22.9368283,lng:-43.1773625,id:"252",text:12e5},{lat:-22.932436,lng:-43.182209,id:"293",text:87e4},{lat:-22.9497259,lng:-43.191109,id:"258",text:14e5},{lat:-22.95227629999999,lng:-43.1920265,id:"319",text:1655e3},{lat:-22.9862535,lng:-43.2085443,id:"274",text:38e5},{lat:-22.9828471,lng:-43.2190744,id:"106",text:125e4},{lat:-22.9364204,lng:-43.1772464,id:"205",text:8e5},{lat:-22.98536499999999,lng:-43.205812,id:"269",text:24e5},{lat:-22.9841693,lng:-43.1907905,id:"294",text:22e5},{lat:-22.98441279999999,lng:-43.1971263,id:"277",text:888e3},{lat:-22.9951318,lng:-43.25443139999999,id:"272",text:13e5},{lat:-22.961163,lng:-43.21866190000001,id:"243",text:965e3},{lat:-22.9636603,lng:-43.17526919999999,id:"300",text:138e4},{lat:-22.9740647,lng:-43.2295688,id:"286",text:26e5},{lat:-22.9397343,lng:-43.1784653,id:"234",text:12e5},{lat:-22.9595579,lng:-43.2052847,id:"278",text:27e5},{lat:-22.985993,lng:-43.209852,id:"279",text:63e5},{lat:-22.9813418,lng:-43.20087359999999,id:"282",text:285e4},{lat:-22.9989087,lng:-43.2403759,id:"287",text:995e3},{lat:-22.9646235,lng:-43.22099180000001,id:"285",text:1e6},{lat:-23.005915,lng:-43.283554,id:"200",text:45e5},{lat:-22.9681899,lng:-43.1867738,id:"302",text:14e5},{lat:-22.9832883,lng:-43.1942136,id:"301",text:3298e3},{lat:-22.9829472,lng:-43.2273167,id:"297",text:13e6},{lat:-22.9620608,lng:-43.1683987,id:"306",text:15e5},{lat:-22.962482,lng:-43.202303,id:"235",text:21e5},{lat:-22.9664361,lng:-43.2171113,id:"325",text:2e6},{lat:-22.984609,lng:-43.2111949,id:"309",text:408e4},{lat:-22.9740622,lng:-43.1879301,id:"310",text:14e5},{lat:-22.9687043,lng:-43.1874209,id:"281",text:18e5},{lat:-22.95227629999999,lng:-43.1920265,id:"320",text:106e4},{lat:-22.93780599999999,lng:-43.1740104,id:"315",text:82e4},{lat:-22.9755475,lng:-43.2276579,id:"317",text:125e4},{lat:-22.95227629999999,lng:-43.1920265,id:"321",text:227e4},{lat:-22.9802468,lng:-43.2023146,id:"336",text:38e5},{lat:-22.95227629999999,lng:-43.1920265,id:"331",text:3275e3},{lat:-22.9655772,lng:-43.2240566,id:"334",text:48e5},{lat:-22.9753872,lng:-43.19832710000001,id:"268",text:53e5},{lat:-22.9946524,lng:-43.25471029999999,id:"338",text:775e3}]},"./packages/ui-dom/components/Icon/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(n("./node_modules/react/index.js")),o=i(n("./node_modules/styled-components/dist/styled-components.browser.esm.js")),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./packages/ui/lib/components/Icon/index.js"));function i(e){return e&&e.__esModule?e:{default:e}}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){s(e,t,n[t])})}return e}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function p(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  ",";\n"]);return p=function(){return e},e}var d=(0,o.default)((0,a.default)(function(e){var t=e.icon,n=e.size,o=e.color,a=e.style,i=e.className,l=e.id,s=e.ref,p=c(e,["icon","size","color","style","className","id","ref"]);return r.default.createElement("div",{style:a,className:i,id:l},r.default.createElement("svg",{ref:s,height:n,version:"1.1",viewBox:"0 0 ".concat(t.width," ").concat(t.height),x:0,y:0},r.default.createElement("path",u({d:t.path,fill:o},p))))}))(p(),a.container);d.displayName="Icon",d.propTypes=l({},a.container.propTypes),d.defaultProps=l({},a.container.defaultProps);var f=d;t.default=f},"./packages/ui-dom/components/Map/ClusterMarker/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./node_modules/react/index.js")),a=(r=n("./packages/ui-dom/components/Map/ClusterMarker/styles.js"))&&r.__esModule?r:{default:r};function i(e){return(i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return!t||"object"!==i(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),s(this,u(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,o.PureComponent),n=t,(r=[{key:"render",value:function(){var e=this.props,t=e.points,n=e.onClick,r=e.highlight,i=void 0===r?[]:r;return o.default.createElement(a.default,{onClick:n&&n.bind(null,t),highlight:i.length>0},o.default.createElement("span",null,t.length))}}])&&l(n.prototype,r),i&&l(n,i),t}();t.default=p},"./packages/ui-dom/components/Map/ClusterMarker/styles.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=(r=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"))&&r.__esModule?r:{default:r},a=n("./packages/ui-dom/node_modules/styled-system/dist/index.esm.js");function i(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  box-sizing: border-box;\n  width: 35px;\n  height: 35px;\n  margin-left: -10px;\n  text-align: center;\n  font-size: 14px;\n  color: #fff;\n  border: 2px solid #fff;\n  border-radius: 100%;\n  background-color: ",";\n  box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.3);\n  transform: translate(-50%, -50%);\n\n  > span {\n    box-sizing: border-box;\n    padding: 2px 0;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  ",";\n  :hover {\n    cursor: pointer;\n    color: ",";\n    background-color: white;\n  }\n"]);return i=function(){return e},e}var l=o.default.div(i(),(0,a.themeGet)("colors.pink"),function(e){var t=e.highlight,n=e.theme;return t?"background-color: white; color: ".concat(n.colors.pink,"; border: 2px solid ").concat(n.colors.pink,";"):""},(0,a.themeGet)("colors.pink"));t.default=l},"./packages/ui-dom/components/Map/Context.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.withMapContext=t.Provider=t.Consumer=void 0;var r,o=(r=n("./node_modules/react/index.js"))&&r.__esModule?r:{default:r};function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var i=o.default.createContext({}),l=i.Consumer,s=i.Provider;t.Provider=s,t.Consumer=l;t.withMapContext=function(e){return function(t){return function(n){return o.default.createElement(l,null,function(r){return o.default.createElement(t,a({},n,e(r,n)))})}}}},"./packages/ui-dom/components/Map/Marker/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MarkerContainer=y,t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./node_modules/react/index.js")),o=s(n("./packages/ui-dom/node_modules/prop-types/index.js")),a=s(n("./node_modules/classnames/index.js")),i=s(n("./packages/ui-dom/components/Map/Marker/styles.js")),l=n("./packages/ui-dom/components/Map/Context.js");function s(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t){return!t||"object"!==u(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function y(e){var t=e.id,n=e.lat,o=e.lng,l=e.highlight,s=e.children,u=e.onSelect,c=e.onClick,p=void 0===c?u?function(){return u(t,{lat:n,lng:o})}:void 0:c,d=e.onMouseEnter,f=void 0===d?u?function(){return u(t,{lat:n,lng:o})}:void 0:d,g=e.onMouseLeave,m=void 0===g?u?function(){return u(t,{lat:n,lng:o})}:void 0:g;return r.default.createElement(i.default,{onClick:p,onMouseEnter:f,onMouseLeave:m,className:(0,a.default)({highlight:l,text:"string"===typeof s,clickable:Boolean(p)})},s)}var h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),f(this,g(t).apply(this,arguments))}var n,o,a;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(t,r.PureComponent),n=t,(o=[{key:"componentDidMount",value:function(){this.props.cluster&&this.props.registerMarker(this.props)}},{key:"componentWillUnmount",value:function(){this.props.cluster&&this.props.unregisterMarker(this.props)}},{key:"render",value:function(){var e=this.props,t=e.cluster,n=e.hasAggregators,o=e.isFramed,a=e.mapLoaded,i=p(e,["cluster","hasAggregators","isFramed","mapLoaded"]);return!a||t&&(n||!o)?null:r.default.createElement(y,c({},i,{highlight:this.isHighlight}))}},{key:"isHighlight",get:function(){return"undefined"!==typeof this.props.highlight?this.props.highlight:this.props.getMarkerHighlight(this.props)}}])&&d(n.prototype,o),a&&d(n,a),t}();b(h,"propTypes",{id:o.default.any.isRequired}),b(h,"defaultProps",{cluster:!0});var O=(0,l.withMapContext)(function(e,t){var n=e.framedMarkers,r=e.hasAggregators,o=e.loaded,a=e.registerMarker,i=e.unregisterMarker,l=e.getMarkerHighlight,s=t.id;return{getMarkerHighlight:l,registerMarker:a,unregisterMarker:i,hasAggregators:r,isFramed:n.includes(s),mapLoaded:o}})(h);t.default=O},"./packages/ui-dom/components/Map/Marker/styles.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.markerTipHighlightStyle=t.markerTipStyle=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./node_modules/styled-components/dist/styled-components.browser.esm.js")),o=n("./packages/ui-dom/node_modules/styled-system/dist/index.esm.js");function a(){var e=s(["\n  background: ",";\n  color: white;\n  border-radius: 4px;\n  box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.3);\n  font-size: 12px;\n  font-weight: 400;\n  margin-top: -6px;\n  padding: 3px 6px 4px;\n  position: absolute;\n  transform: translate(-50%, -100%)\n    scale(",");\n  transition: transform 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  z-index: ",";\n  white-space: nowrap;\n  &:after {\n    ",";\n  }\n  &:hover,\n  &.highlight {\n    z-index: 1;\n    cursor: grab;\n  }\n  &.clickable:hover {\n    cursor: pointer;\n  }\n  &.text:hover,\n  &.text.highlight {\n    background: white;\n    color: ",";\n    &:after {\n      ",";\n    }\n  }\n"]);return a=function(){return e},e}function i(){var e=s(["\n  border-top: 8px solid white;\n"]);return i=function(){return e},e}function l(){var e=s(["\n  bottom: -6px;\n  content: '';\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 8px solid ",";\n"]);return l=function(){return e},e}function s(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var u=(0,r.css)(l(),(0,o.themeGet)("colors.pink"));t.markerTipStyle=u;var c=(0,r.css)(i());t.markerTipHighlightStyle=c;var p=r.default.div(a(),(0,o.themeGet)("colors.pink"),function(e){return e.highlight?1.3:1},function(e){return e.highlight?1:0},u,(0,o.themeGet)("colors.pink"),c);t.default=p},"./packages/ui-dom/components/Map/MultiMarker/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=s(n("./node_modules/react/index.js")),a=(r=n("./node_modules/classnames/index.js"))&&r.__esModule?r:{default:r},i=n("./packages/ui-dom/components/Map/Marker/index.js"),l=s(n("./packages/ui-dom/components/Map/MultiMarker/styles.js"));function s(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}function u(e){return(u="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||"object"!==u(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var m=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),d(this,f(t).apply(this,arguments))}var n,r,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(t,o.PureComponent),n=t,(r=[{key:"render",value:function(){var e=this.props,t=e.className,n=e.points,r=e.onClick,s=e.highlight,u=void 0===s?[]:s,p=e.id,d=e.lat,f=e.lng;return o.default.createElement(l.default,{id:p,lat:d,lng:f,cluster:!1,highlight:!1,onClick:r&&r.bind(null,n),className:(0,a.default)(t,{highlight:u.length>0})},o.default.createElement(l.List,null,n.map(function(e){return o.default.createElement(i.MarkerContainer,c({key:e.id,highlight:-1!==u.indexOf(e.id)},e.props))})))}}])&&p(n.prototype,r),s&&p(n,s),t}();t.default=m},"./packages/ui-dom/components/Map/MultiMarker/styles.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.List=t.default=void 0;var r,o=(r=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"))&&r.__esModule?r:{default:r},a=n("./packages/ui-dom/node_modules/styled-system/dist/index.esm.js"),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./packages/ui-dom/components/Map/Marker/styles.js"));function l(){var e=u(["\n  z-index: 1;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border-radius: 4px;\n  overflow: hidden;\n"]);return l=function(){return e},e}function s(){var e=u(["\n  position: absolute;\n  transform: translate(-50%, -100%);\n  border: 2px solid ",";\n  border-radius: 4px;\n  box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.3);\n  background: ",";\n  &:before {\n    z-index: 2;\n    position: absolute;\n    content: '';\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-radius: 4px;\n    border: 1px solid ",";\n    pointer-events: none;\n  }\n  &:after {\n    ",";\n    margin-bottom: -2px;\n  }\n  &.highlight,\n  &:hover {\n    border-color: white;\n    background: white;\n    &:after {\n      ",";\n    }\n  }\n  "," {\n    z-index: 0;\n    position: relative;\n    transform: none;\n    margin: 0;\n    border-radius: 0;\n    box-shadow: none;\n    &:after,\n    &:before {\n      display: none;\n    }\n  }\n"]);return s=function(){return e},e}function u(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var c=o.default.div(s(),(0,a.themeGet)("colors.pink"),(0,a.themeGet)("colors.pink"),(0,a.themeGet)("colors.pink"),i.markerTipStyle,i.markerTipHighlightStyle,i.default);t.default=c;var p=o.default.div(l());t.List=p},"./packages/ui-dom/components/Map/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=O(n("./node_modules/lodash/cond.js")),o=O(n("./node_modules/lodash/stubTrue.js")),a=O(n("./node_modules/lodash/constant.js")),i=O(n("./node_modules/lodash/identity.js")),l=O(n("./node_modules/lodash/flatten.js")),s=O(n("./node_modules/lodash/isObject.js")),u=O(n("./node_modules/lodash/isFunction.js")),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./node_modules/react/index.js")),p=O(n("./packages/ui-dom/node_modules/prop-types/index.js")),d=O(n("./node_modules/google-map-react/lib/index.js")),f=O(n("./node_modules/points-cluster/lib/index.js")),g=O(n("./node_modules/lodash/noop.js")),m=O(n("./packages/ui-dom/components/Map/Marker/index.js")),b=O(n("./packages/ui-dom/components/Map/ClusterMarker/index.js")),y=O(n("./packages/ui-dom/components/Map/MultiMarker/index.js")),h=n("./packages/ui-dom/components/Map/Context.js");function O(e){return e&&e.__esModule?e:{default:e}}function x(e){return(x="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function k(){return(k=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function M(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){I(e,t,n[t])})}return e}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var K,Z=(K=function(){return{minZoom:0,maxZoom:17,radius:40}},(0,r.default)([[u.default,i.default],[s.default,a.default],[o.default,K]])),Y=function(e,t){return t.mapOptions.bounds?function(e,t){var n=t.markers,r=t.mapOptions,o=w({},t.clusterOptions);return!isNaN(e.multiMarkerRadius)&&r.zoom>o.maxZoom&&Object.assign(o,{maxZoom:e.maxZoom,radius:e.multiMarkerRadius}),(0,f.default)(Object.values(n),o)(r)}(e,t).map(function(e){var t=e.wx,n=e.wy,r=e.numPoints,o=e.points;return{lat:n,lng:t,numPoints:r,id:"".concat(r,"_").concat(o[0].id),points:o}}):[]},G={Coordinates:p.default.shape({lat:p.default.number.isRequired,lng:p.default.number.isRequired}),SuperClusterOptions:p.default.shape({minZoom:p.default.number.isRequired,maxZoom:p.default.number.isRequired,radius:p.default.number.isRequired})},q=function(e){function t(){var e,n,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,i=new Array(a),l=0;l<a;l++)i[l]=arguments[l];return r=this,o=(e=j(t)).call.apply(e,[this].concat(i)),n=!o||"object"!==x(o)&&"function"!==typeof o?P(r):o,I(P(P(n)),"state",{loaded:!1,hasAggregators:!1,markers:[],framedMarkers:[],clusters:[],clusterOptions:{},mapOptions:{center:{lat:-22.9608099,lng:-43.2096142},zoom:8}}),I(P(P(n)),"registerMarker",function(e){var t=e.id,r=e.lat,o=e.lng,a=M(e,["id","lat","lng"]);return n.setState(function(e){return{markers:w({},e.markers,I({},t,{id:t,lat:r,lng:o,props:a}))}})}),I(P(P(n)),"unregisterMarker",function(e){var t=e.id;return n.setState(function(e){var n=k({},e.markers);return delete n[t],{markers:n}})}),I(P(P(n)),"updateClusters",function(){var e={clusterOptions:{},framedMarkers:[],clusters:[],hasAggregators:!1};return n.props.cluster?(e.clusterOptions=Z(n.props.cluster,n.props),e.clusters=Y(n.props,w({},n.state,e)),e.hasAggregators=Boolean(e.clusters.find(function(e){return e.points.length>1})),e.framedMarkers=e.clusters.reduce(function(e,t){return e.concat(t.points)},[]).map(function(e){return e.id}),n.setState(e),e):e}),I(P(P(n)),"onMapLoaded",function(e){var t=e.map,r=e.maps,o=n.props,a=o.onMapLoaded,i=o.onDragEnd,l=o.onZoomChanged;t&&(n.setState({loaded:!0,map:t,maps:r},n.fitMap),i&&t.addListener("dragend",i),l&&t.addListener("zoom_changed",l)),a&&a(e)}),I(P(P(n)),"onMapChange",function(e){var t=e.center,r=e.zoom,o=e.bounds;return n.setState({mapOptions:{center:t,zoom:r,bounds:o}},n.boundsUpdated)}),I(P(P(n)),"fitMap",function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.state.markers,t=Object.values(e).map(function(e){return new n.maps.LatLng(e.lat,e.lng)}),r=new n.maps.LatLngBounds,o=0,a=t.length;o<a;o++)r.extend(t[o]);if(n.fitBounds(r),1===e.length&&n.setZoom(15),0===e.length){var i=n.state.mapOptions.center;n.setCenter(new n.maps.LatLng(i.lat,i.lng)),n.setZoom(13)}}),I(P(P(n)),"frameCluster",function(e){for(var t=n.props.onFrameCluster,r=Object.values(e).map(function(e){return new n.maps.LatLng(e.lat,e.lng)}),o=new n.maps.LatLngBounds,a=0,i=r.length;a<i;a++)o.extend(r[a]);n.fitBounds(o),t&&t(o,e)}),I(P(P(n)),"createMapOptions",function(e){var t=n.props,r=t.options,o=t.minZoom,a=t.maxZoom,i={defaultZoom:t.defaultZoom,defaultCenter:t.defaultCenter,maxZoom:a,minZoom:o,zoomControlOptions:{position:e.ControlPosition.RIGHT_TOP,style:e.ZoomControlStyle.SMALL},mapTypeControlOptions:{position:e.ControlPosition.TOP_RIGHT},mapTypeControl:!0};return"function"===typeof r?r(e,i):Object.assign(i,r)}),I(P(P(n)),"getMarkerHighlight",function(e){var t=e.id,r=e.lat,o=e.lng,a=n.props,i=a.highlight,l=a.isHighlight;return"function"===typeof l?l({id:t,lat:r,lng:o}):!!i&&(i.lat==r&&i.lng==o)}),I(P(P(n)),"getClusterHighlight",function(e){return e.points.filter(n.getMarkerHighlight).map(function(e){return e.id})}),I(P(P(n)),"renderCluster",function(e){var t=n.state,r=t.mapOptions,o=t.clusterOptions,a={key:e.id,lat:e.lat,lng:e.lng,points:e.points,onClick:n.frameCluster,highlight:n.getClusterHighlight(e)},i=r.zoom>o.maxZoom?y.default:b.default;return c.default.createElement(i,k({cluster:!1},a))}),n}var n,r,o;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(t,c.PureComponent),n=t,(r=[{key:"componentDidUpdate",value:function(e,t){this.state.markers!==t.markers&&this.updateClusters()}},{key:"getContext",value:function(){return w({},this.state,{getMarkerHighlight:this.getMarkerHighlight,registerMarker:this.registerMarker,unregisterMarker:this.unregisterMarker})}},{key:"panTo",value:function(){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return(e=this.map?this.map.panTo:g.default).call.apply(e,[this.map].concat(n))}},{key:"fitBounds",value:function(){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return(e=this.map?this.map.fitBounds:g.default).call.apply(e,[this.map].concat(n))}},{key:"setCenter",value:function(){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return(e=this.map?this.map.setCenter:g.default).call.apply(e,[this.map].concat(n))}},{key:"setZoom",value:function(){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return(e=this.map?this.map.setZoom:g.default).call.apply(e,[this.map].concat(n))}},{key:"boundsUpdated",value:function(){var e=this.props.onChange,t=this.state.mapOptions,n=this.updateClusters().clusters;if(e){var r=n?(0,l.default)(n.filter(function(e){return 1===e.numPoints}).map(function(e){return A(e.points)})):[];e(t.bounds,r.map(function(e){return e.id}))}}},{key:"render",value:function(){var e=this.props,t=e.children,n=e.apiKey,r=e.libraries,o=e.defaultCenter,a=e.defaultZoom,i=this.state,l=i.hasAggregators,s=i.clusters;return c.default.createElement(h.Provider,{value:this.getContext()},c.default.createElement(d.default,{bootstrapURLKeys:{key:n,libraries:r,language:"pt-BR",region:"br"},defaultZoom:a,defaultCenter:o,options:this.createMapOptions,yesIWantToUseGoogleMapApiInternals:!0,onChange:this.onMapChange,onGoogleApiLoaded:this.onMapLoaded},t,l&&s.map(this.renderCluster)))}},{key:"map",get:function(){return this.state.map}},{key:"maps",get:function(){return this.state.maps}}])&&v(n.prototype,r),o&&v(n,o),t}();t.default=q,I(q,"Marker",m.default),I(q,"propTypes",{children:p.default.node.isRequired,apiKey:p.default.string,libraries:p.default.array,highlight:G.Coordinates,isHighlight:p.default.func,minZoom:p.default.number.isRequired,maxZoom:p.default.number.isRequired,defaultZoom:p.default.number.isRequired,defaultCenter:G.Coordinates.isRequired,multiMarkerRadius:p.default.number.isRequired,options:p.default.oneOfType([p.default.object,p.default.func]),cluster:p.default.oneOfType([p.default.bool,p.default.func,G.SuperClusterOptions]),onChange:p.default.func,onDragEnd:p.default.func,onZoomChanged:p.default.func,onFrameCluster:p.default.func}),I(q,"defaultProps",{libraries:[],defaultCenter:{lat:-22.9608099,lng:-43.2096142},defaultZoom:8,minZoom:7,maxZoom:20,multiMarkerRadius:0})},"./packages/ui-dom/components/View/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(n("./node_modules/styled-components/dist/styled-components.browser.esm.js")),o=n("./packages/ui-dom/node_modules/styled-system/dist/index.esm.js"),a=i(n("./packages/ui/lib/components/View/index.js"));function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}function l(){var e=c(["\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-color: ",";\n      "]);return l=function(){return e},e}function s(){var e=c(["\n        margin-bottom: ","px;\n      "]);return s=function(){return e},e}function u(){var e=c(["\n  @media only screen and (max-device-width: 600px) {\n    ",";\n    ",";\n  }\n  ",";\n"]);return u=function(){return e},e}function c(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var p=r.default.div(u(),function(e){return e.body&&(0,r.css)(s(),(0,o.themeGet)("space.6"))},function(e){return e.bottom&&(0,r.css)(l(),(0,o.themeGet)("colors.white"))},a.container);t.default=p},"./packages/ui/lib/components/Icon/hoc.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=(r=n("./node_modules/react/index.js"))&&r.__esModule?r:{default:r},a=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"),i=n("./packages/ui/lib/theme/measures.js");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}t.default=function(e){return(0,a.withTheme)(function(t){var n,r,a,u,c,p,d,f,g,m,b=t.theme,y=s(t,["theme"]);return o.default.createElement(e,l({},y,function(e,t){var n=e.color,r=e.stroke;return{color:t.colors[n]||n,stroke:t.colors[r]||r}}(y,b),{size:(g=y,m=g.size,"string"===typeof m?i.ICON_SIZE.get(m):m),icon:(n=y,r=b,a=n.type,u=n.name,c=r.icons,p=r.defaultIcon,d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a;if(t in c){var n=Object.keys(c[t]).map(function(e){return c[t][e]}),r=!0,o=!1,i=void 0;try{for(var l,s=n[Symbol.iterator]();!(r=(l=s.next()).done);r=!0){var u=l.value;if(u.iconName==e)return u}}catch(p){o=!0,i=p}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}}},f=d(u)||d(p,"default"),{width:f.icon[0],height:f.icon[1],path:f.icon[4]})}))})}},"./packages/ui/lib/components/Icon/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return s.default}}),t.container=void 0;var r=u(n("./node_modules/prop-types/index.js")),o=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"),a=n("./packages/ui/node_modules/styled-system/dist/index.esm.js"),i=n("./packages/ui/lib/theme/measures.js"),l=n("./packages/ui/lib/styles/index.js"),s=u(n("./packages/ui/lib/components/Icon/hoc.js"));function u(e){return e&&e.__esModule?e:{default:e}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  display: flex;\n  align-items: center;\n  width: auto;\n  ",";\n  ",";\n  ",";\n  ",";\n  ",";\n"]);return p=function(){return e},e}var d=(0,o.css)(p(),a.space,a.width,a.justifyContent,a.alignItems,function(e){return e.height?(0,l.buttonHeight)(e):e.size?(0,l.iconHeight)(e):void 0});t.container=d,d.propTypes=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){c(e,t,n[t])})}return e}({},a.space.propTypes,{type:r.default.string,name:r.default.string,color:r.default.string,stroke:r.default.string,size:r.default.oneOfType([r.default.number,r.default.oneOf(Array.from(i.ICON_SIZE.keys()))])}),d.defaultProps={type:"default",size:"default"}},"./packages/ui/lib/components/View/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.container=void 0;var r,o=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"),a=n("./packages/ui/node_modules/styled-system/dist/index.esm.js"),i=(r=n("./packages/ui/lib/styles/elevation/index.js"))&&r.__esModule?r:{default:r};function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return s=function(){return e},e}var u=(0,o.css)(s(),a.space,a.width,a.maxWidth,a.minWidth,a.height,a.maxHeight,a.minHeight,a.order,a.flex,a.alignSelf,a.backgroundColor,i.default);t.container=u,u.propTypes=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){l(e,t,n[t])})}return e}({},a.space.propTypes,a.width.propTypes,a.minWidth.propTypes,a.maxWidth.propTypes,a.height.propTypes,a.minHeight.propTypes,a.maxHeight.propTypes,a.flex.propTypes,a.order.propTypes,a.alignSelf.propTypes,a.backgroundColor.propTypes,i.default.propTypes),u.defaultProps={body:!1,bottom:!1}},"./packages/ui/lib/styles/breakpoint.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.isMobile=t.only=t.down=t.up=void 0;var r=function(e,t){var n=t.breakpointNames.indexOf(e);return-1!==n?n:void 0},o=function(e){return function(t){var n=t.theme,o=r(e,n),a=parseInt(n.breakpoints[o]);return"(min-width: ".concat(a,"px)")}};t.up=o;var a=function(e){return function(t){var n=t.theme,o=r(e,n),a=parseInt(n.breakpoints[o+1]);return isNaN(a)?"(min-width: 0px)":"(max-width: ".concat(a-1,"px)")}};t.down=a;var i=function(e){return function(t){var n=t.theme,o=r(e,n),a=parseInt(n.breakpoints[o]),i=parseInt(n.breakpoints[o+1]);return isNaN(i)?"(min-width: ".concat(a,"px)"):"(min-width: ".concat(a,"px) and (max-width: ").concat(i-1,"px)")}};t.only=i;var l=function(e){return-1!==["tablet","phone"].indexOf(e)};t.isMobile=l;var s={up:o,down:a,only:i,isMobile:l};t.default=s},"./packages/ui/lib/styles/elevation/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=l;var r,o=(r=n("./node_modules/prop-types/index.js"))&&r.__esModule?r:{default:r};function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(s){o=!0,a=s}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var i=function(e){var t=e.elevation,n=e.theme,r=n.shadows,o=n.shadowOpacity;return Object.entries(r[t]).map(function(e){var t,n,r,i,l,s=a(e,2),u=s[0],c=s[1];return"".concat((t=c,n=t.x,r=t.y,i=t.radius,l=t.spread,"".concat(n,"px ").concat(r,"px ").concat(i,"px ").concat(l,"px"))," rgba(0,0,0,").concat(o[u],")")})};function l(e){if(e.elevation)return"box-shadow: ".concat(i(e).join(","),";")}l.propTypes={elevation:o.default.number}},"./packages/ui/lib/styles/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"elevation",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(t,"breakpoint",{enumerable:!0,get:function(){return l.default}}),t.defaultFontFamily=t.fontWeight=t.fontSize=t.iconWidth=t.iconHeight=t.iconSize=t.buttonHeight=t.letterSpacing=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n("./packages/ui/node_modules/styled-system/dist/index.esm.js")),o=n("./packages/ui/lib/utils.js"),a=n("./packages/ui/lib/theme/measures.js"),i=s(n("./packages/ui/lib/styles/elevation/index.js")),l=s(n("./packages/ui/lib/styles/breakpoint.js"));function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(e){return function(t){return isNaN(t)?t:"".concat(t).concat(e)}},p=(0,o.enumeratedStyle)({map:a.LETTER_SPACING,prop:"letterSpacing",cssProperty:"letterSpacing",key:"letterSpacing",transformValue:c("px")});t.letterSpacing=p;var d=(0,o.enumeratedStyle)({map:a.BUTTON_HEIGHT,prop:"height",cssProperty:"height",key:"buttonHeight",transformValue:c("px")});t.buttonHeight=d;var f=function(e){return(0,o.enumeratedStyle)(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){u(e,t,n[t])})}return e}({map:a.ICON_SIZE,prop:"size",key:"iconSize",transformValue:c("px")},e))};t.iconSize=f;var g=f({cssProperty:"height"});t.iconHeight=g;var m=f({cssProperty:"height"});t.iconWidth=m;var b=(0,o.enumerated)(a.FONT_SIZE,"fontSize")(r.fontSize);t.fontSize=b;var y=(0,o.enumerated)(a.FONT_WEIGHT,"fontWeight")(r.fontWeight);t.fontWeight=y;t.defaultFontFamily=function(e){var t=e.theme.fontFamily;return t?"font-family: ".concat(t,";"):null}},"./packages/ui/lib/utils.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.withProps=t.enumeratedStyle=t.enumerated=void 0;var r=n("./packages/ui/node_modules/styled-system/dist/index.esm.js");function o(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){i(e,t,n[t])})}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(e,t){return function(n){return Object.assign(function(r){var o=r[t],i=a({},r);return e&&"string"==typeof o&&e.has(o)&&(i[t]=e.get(o)),n(i)},n)}};t.enumerated=l;t.enumeratedStyle=function(e){var t=e.map,n=o(e,["map"]);return l(t,n.prop)((0,r.style)(n))};t.withProps=function(e){return function(t){return t.map(function(t){return"function"===typeof t?function(n){return t(a({},n,e))}:t})}}}}]);
//# sourceMappingURL=docs-components-map.bea259b91bd51e5355bd.js.map