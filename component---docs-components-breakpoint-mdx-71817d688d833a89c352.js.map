{"version":3,"sources":["webpack:///../docs/components/breakpoint.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","only","down","up","breakpoint","isMobile","mr","color","parentName","isMDXComponent"],"mappings":"glBAWO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,8EACA,YAAC,IAAD,CAAYC,KAAK,QAAQD,QAAQ,cACnC,YAAC,IAAD,CAAMA,QAAQ,QAAd,eAEE,YAAC,IAAD,CAAYE,KAAK,SAASF,QAAQ,cACpC,YAAC,IAAD,CAAMA,QAAQ,QAAd,mBAEE,YAAC,IAAD,CAAYG,GAAG,UAAUH,QAAQ,cACnC,YAAC,IAAD,CAAMA,QAAQ,QAAd,YAfO,wBAkBL,mDACA,YAAC,qBAAD,CAAoBA,QAAQ,uBAC7B,gBACKI,EADL,EACKA,WACAC,EAFL,EAEKA,SAFL,OAGS,YAAC,IAAD,CAAKL,QAAQ,OACnB,YAAC,IAAD,CAAKM,GAAI,EAAGN,QAAQ,OAClB,YAAC,IAAD,CAAMA,QAAQ,QAAQI,IAExB,YAAC,IAAD,CAAKJ,QAAQ,OACX,YAAC,IAAD,CAAMO,MAAOF,EAAW,OAAS,OAAQL,QAAQ,QAAjD,IAA0DK,EAAW,YAAc,aAAnF,UA5BC,oBAiCL,wDAAuC,0BAAYG,WAAW,KAAvB,sBAAvC,6BAAmI,0BAAYA,WAAW,KAAvB,cAAnI,c,uMAKJX,EAAWY,gBAAiB","file":"component---docs-components-breakpoint-mdx-71817d688d833a89c352.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/emcasa/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Breakpoint, { BreakpointProvider } from '@emcasa/ui-dom/components/Breakpoint';\nimport Row from '@emcasa/ui-dom/components/Row';\nimport Col from '@emcasa/ui-dom/components/Col';\nimport Text from '@emcasa/ui-dom/components/Text';\nimport View from '@emcasa/ui-dom/components/View';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"breakpoint\"\n    }}>{`Breakpoint`}</h2>\n    <p>{`Renders children when breakpoint requirements are met`}</p>\n    <Breakpoint only=\"phone\" mdxType=\"Breakpoint\">\n  <Text mdxType=\"Text\">Only phone</Text>\n    </Breakpoint>\n    <Breakpoint down=\"tablet\" mdxType=\"Breakpoint\">\n  <Text mdxType=\"Text\">Tablet & Phone</Text>\n    </Breakpoint>\n    <Breakpoint up=\"desktop\" mdxType=\"Breakpoint\">\n  <Text mdxType=\"Text\">Desktop</Text>\n    </Breakpoint>\n## BreakpointProvider\n    <p>{`Returns current breakpoint`}</p>\n    <BreakpointProvider mdxType=\"BreakpointProvider\">\n  {({\n        breakpoint,\n        isMobile\n      }) => <Row mdxType=\"Row\">\n      <Col mr={2} mdxType=\"Col\">\n        <Text mdxType=\"Text\">{breakpoint}</Text>\n      </Col>\n      <Col mdxType=\"Col\">\n        <Text color={isMobile ? 'pink' : 'grey'} mdxType=\"Text\">({isMobile ? 'is mobile' : 'not mobile'})</Text>\n      </Col>\n    </Row>}\n    </BreakpointProvider>\n## withBreakpoint\n    <p>{`Wraps the target component in a `}<inlineCode parentName=\"p\">{`BreakpointProvider`}</inlineCode>{` and passes the resulting `}<inlineCode parentName=\"p\">{`breakpoint`}</inlineCode>{` to props`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}